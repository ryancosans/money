Step 1

Implement a library solves the problem of adding two amounts of money. You can assume they are always going to be of the same currency

example
10 EUR + 10 EUR = 20 EUR

Step 2

You can no longer assume the amounts will be of the same currency. Your library should not allow adding two amounts of different currencies.

example
10 EUR + 10 GBP => not allowed

Step 3

Extend the library to properly add amounts of different currencies.
When two amounts of different currency are passed on to the service
it should convert the second amount to the currency of the first
amount that was passed. The sum should be in the currency of the first amount.

Regarding rates: For the needs of this puzzle feel free to implement a dummy approach. (i.e. all rates are equal to 1.000, or you get random rates per currency path) but it should be extensible to allow adding proper real-time rates without much change in the library.

example
10 EUR + 10 GBP = 20 EUR (assuming the rate of GBP to EUR is 1.00)

Step 4

Extend the library to allow adding a list of amounts of any currency.
The result should be returned in the currency of the amount that occupies
the first position in the list.

example
10 EUR + 10 GBP + 10 USD + 30 ZAR = 44 EUR (assuming GBP -> EUR: 0.80)